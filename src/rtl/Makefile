SIMULATOR = vvp
SIMULATOR-FLAGS = -lxt2
VERILOG-CC = iverilog
RISCV-CC = riscv32-none-elf-gcc
RISCV-AS = riscv32-none-elf-as
RISCV-OBJCOPY = riscv32-none-elf-objcopy
RISCV-ELF2HEX = riscv32-none-elf-elf2hex
XLEN = 32
ELF2HEX-FLAGS = --bit-width $(XLEN)
RISCV-CC-FLAGS = -march=rv32im -mabi=ilp32 -ffreestanding -nolibc -nostdlib -Wl,-Ttext=0x0
AS-FLAGS =
FLAGS =

BUILDDIR = build
TESTBED_EXECUTABLE = simulation.vvp

TESTBED_SOURCE = testbed.v
RTL_SOURCES = $(shell find core/ -type f -name '*.sv')

TEST_PROGRAM_SOURCE = test.c
TEST_PROGRAM_ELF = test.elf
TEST_PROGRAM = test.hex
FIRMWARE_PROGRAM_SOURCE = firmware.s
FIRMWARE_PROGRAM_ELF = firmware.elf
FIRMWARE_PROGRAM = firmware.hex

all: dir $(BUILDDIR)/$(TESTBED_EXECUTABLE)
test: all
	cd $(BUILDDIR) && $(SIMULATOR) $(TESTBED_EXECUTABLE) $(SIMULATOR-FLAGS)

dir:
	mkdir -p $(BUILDDIR)

$(BUILDDIR)/$(TESTBED_EXECUTABLE): $(BUILDDIR)/$(TEST_PROGRAM) $(BUILDDIR)/$(FIRMWARE_PROGRAM) $(TESTBED_SOURCE) $(RTL_SOURCES)
	$(VERILOG-CC) $(FLAGS) $(TESTBED_SOURCE) -o $@

$(BUILDDIR)/$(TEST_PROGRAM_ELF): $(TEST_PROGRAM_SOURCE)
	$(RISCV-CC) $(RISCV-CC-FLAGS) $(TEST_PROGRAM_SOURCE) -o $@

$(BUILDDIR)/$(TEST_PROGRAM): $(BUILDDIR)/$(TEST_PROGRAM_ELF)
	$(RISCV-ELF2HEX) $(ELF2HEX-FLAGS) --input $(BUILDDIR)/$(TEST_PROGRAM_ELF) --output $@

$(BUILDDIR)/$(FIRMWARE_PROGRAM_ELF): $(FIRMWARE_PROGRAM_SOURCE)
	$(RISCV-AS) $(FIRMWARE_PROGRAM_SOURCE) -o $@

$(BUILDDIR)/$(FIRMWARE_PROGRAM): $(BUILDDIR)/$(FIRMWARE_PROGRAM_ELF)
	$(RISCV-ELF2HEX) $(ELF2HEX-FLAGS) --input $(BUILDDIR)/$(FIRMWARE_PROGRAM_ELF) --output $@

clean:
	rm -f $(BUILDDIR)/*

